(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'DAL' object has no attribute 'lastsql_'"
p3
sS'layer'
p4
S'/home/wasuaje/Documentos/desarrollo/web2py6/applications/pysalon/controllers/mov_caja.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n### required - do no delete\nimport json\nimport math \nimport datetime\n\ndef user(): return dict(form=auth())\ndef download(): return response.download(request,db)\ndef call(): return service()\n### end requires\n@auth.requires_login()\ndef index():\t\n\ttabla=\'mv_caja_det\'\n\ttabla2=\'mv_caja\'\n\tmsg="Cargando..."\n\turl=""\n\tif request.vars.exito!=None:\n\t\texito=int(request.vars.exito)\n\telse:\n\t\texito=3\n\tif exito==1:\n\t\tmsg="Movimiento insertado correctamente !"\n\telif exito==0:\n\t\tmsg="No se inserto movimiento!"\n\telif exito==2:\n\t\tmsg="Registro eliminado con exito!"\n\t\t\n\t#seleccion data de caja abierta\t\n\trw=db( (db[tabla2].cierre == None ) ).select().first()\n\tprint db.lastsql_\n\tif rw:\n\t\turl=URL(\'mov_caja\',\'imprimir\',vars=dict(mv_id=rw.id))\n\t\tmv_id=rw.id\n\t\trow=db(db[tabla].mv_caja_id == mv_id).select()\n\t\t#form con concepto\n\t\tform = SQLFORM.factory(\t\t\t\t\t\t\t\n\t        \t\tField(\'Concepto\', type=\'string\',length=\'200\',requires=IS_NOT_EMPTY()),\n\t        \t\tField(\'Entrada\', type=\'string\',default=\'0.00\', requires=IS_NOT_EMPTY()),\n\t        \t\tField(\'Salida\', type=\'string\',default=\'0.00\',requires=IS_NOT_EMPTY()),\n\t        \t\thidden=dict(elid=rw.id),\n\t        \t\tformstyle=\'bootstrap\')\n\t\tif form.process(onvalidation=validate).accepted:\t\t\t\n\t\t#aunque exito viene del redirect del onvalidate este es para que no de errror\n\t\t\texito=1\t\t\t\t\t\n\t\telif form.errors:\n\t\t\texito=0\n\n\t\tentradas=0.00\n\t\tsalidas=0.00\n\t\ttotales=0.00\n\t\tfor x in row:\n\t\t\tentradas+=x.entrada\n\t\t\tsalidas+=x.salida\n\t\ttotales=entradas-salidas\n\t\t#print entradas,salidas,totales\n\n\t\tprueba="""\n\t\t<table id="mitabla" style=".selected{color:red;}" class="table table-striped table-bordered table-hover" cellspacing="0" width="100%">\n\t        <thead>\n\t            <tr>\n\t            \t<th>Id</th>                \n\t                <th>Concepto</th>                \n\t                <th>Entrada</th>            \n\t                <th>Salida</th>                \n\t            </tr>\n\t        </thead>\n\t        <tfoot>\n\t            <tr>\n\t            \t<th></th>                \n\t                <th></th>                \n\t                <th>_E_</th>                \n\t                <th>_S_</th>\n\t            </tr>\n\t            <tr>\n\t            \t<th></th>                \n\t                <th>Totales</th>                \n\t                <th></th>                \n\t                <th>_T_</th>\n\t            </tr>\n\t        </tfoot>\n\t        <tbody>\n\t        """ \n\t\tprueba=prueba.replace(\'_E_\',str(entradas))\n\t\tprueba=prueba.replace(\'_S_\',str(salidas))\n\t\tprueba=prueba.replace(\'_T_\',str(totales))\t\t\n\t\t\n\n\t\tlista=["<tr><td>"+str(row.id)+"</td>"+\\\n\t\t\t\t"<td>"+row.concepto+"</td>"+\\\n\t\t\t\t"<td>"+str(row.entrada)+"</td>"+\\\n\t\t\t\t"<td>"+str(row.salida)+"</td>"+\\\n\t\t\t\t"</tr>" for row in row] \t\n\t\tprueba+="".join(lista)\n\t\tprueba+="</tbody></table>"\n\n\t        \t\n\t\tif len(prueba)>0:\n\t\t\tmytabla=XML(prueba)\n\t\telse:\t\t\n\t\t\tmytabla=T("No existen registros")\n\telse:\n\t\tmsg="No hay una caja abierta !"\n\t\texito=0\n\t\tmytabla=T("No existen registros")\n\t\tform=""\n\n\treturn dict(mytabla=mytabla,exito=exito,msg=msg,form=form,url=url)\n\ndef validate(form):\n\ttabla=\'mv_caja_det\'\n\t#print form.vars\n\telid=request.vars.elid\n\trecord2=db[tabla].insert(fecha=datetime.datetime.now(),\n\t\t\t\t\t\t\tconcepto=form.vars.Concepto,\n\t\t\t\t\t\t\tentrada=form.vars.Entrada,\n\t\t\t\t\t\t\tsalida=form.vars.Salida,\n\t\t\t\t\t\t\tmv_caja_id=elid,\n\t\t\t\t\t\t\tusuario_id=session.auth.user.id\n\t\t\t\t\t\t\t\t\t)\n\t#print db._lastsql\n\tif record2:\t\t\t\n\t\tredirect(URL(\'mov_caja\',\'index\',vars=dict(exito=1)))\t\n\telse:\t\t\t\n\t\tredirect(URL(\'mov_caja\',\'index\',vars=dict(exito=0)))\n\n\n\ndef eliminar():\n\ttabla=\'mv_caja_det\'\n\tif len(request.args) > 0:\n\t\tid = request.args[0]\n\t\trow=db(db[tabla].id == id).delete()\t\t\n\t\tif row:\t\t\t\t\t\n\t\t\tredirect(URL(\'mov_caja\',\'index\',vars=dict(exito=2) ) ) \n\t\telif row==None:\t\t\t\n\t\t\tredirect(URL(\'mov_caja\',\'index\',vars=dict(exito=2) ) ) \n\treturn\n\n\n\ndef error():\n    return dict()\n\ndef imprimir():\n# Let\'s import the wrapper\n\timport os\n\timport pdf\n\tfrom pdf.theme import colors, DefaultTheme\n\n\tmov_id=request.vars.mv_id\n\t# and define a constant\n\tTABLE_WIDTH = 540 # this you cannot do in rLab which is why I wrote the helper initially\n\n    # then let\'s extend the Default theme. I need more space so I redefine the margins\n    # also I don\'t want tables, etc to break across pages (allowSplitting = False)\n    # see http://www.reportlab.com/docs/reportlab-userguide.pdf\n\tclass MyTheme(DefaultTheme):\n\t\tdoc = {\n            \'leftMargin\': 25,\n            \'rightMargin\': 25,\n            \'topMargin\': 20,\n            \'bottomMargin\': 25,\n            \'allowSplitting\': False\n            }\n            \n    # let\'s create the doc and specify title and author\n\tdoc = pdf.Pdf(\'Caja a la fecha:\', \'wuelfhis asuaje\')\n\n    # now we apply our theme\n\tdoc.set_theme(MyTheme)\n\n    # time to add the logo at the top right\n\t#logo_path = os.path.join(request.folder,\'static/images\',\'facebook.png\')   \n\t#doc.add_image(logo_path, 67, 67, pdf.LEFT)\n\tlogo=pdf.Image(os.path.join(request.folder,\'static/images\',\'facebook.png\')   )\n\taddress = pdf.Paragraph("<para align=left> %s </para>" % settings.title,MyTheme.paragraph)\n\taddress2 = pdf.Paragraph("<para align=left>%s </para>" % settings.subtitle,MyTheme.paragraph)\n\tLIST_STYLE = [(\n\t\t\t\'LINEABOVE\', (0,0), (-1,0), 2, colors.grey),\n\t\t\t(\'LINEABOVE\', (0,1), (-1,-1), 0.25, colors.black),\n\t\t\t(\'LINEBELOW\', (0,0), (-1,-1), 2, colors.grey),\n\t\t\t(\'LEFTPADDING\', (0,0), (-1,-1), 0),  \n        \t(\'RIGHTPADDING\', (0,0), (-1,-1), 0),\n\t\t\t(\'ALIGN\', (0,0), (0,0),\'LEFT\'),\n\t\t\t(\'COLWIDTH\', (0,0), (0,0),10),\n\t\t\t(\'ALIGN\', (-1,-1), (-1,0),\'RIGHT\'),\n\t\t\t]\n\t\t\n\tHEAD_STYLE = [\n\t \t(\'ALIGN\', (0,0), (-1,-1),\'CENTER\'),\n\t]\n\t\n\ttablelogo=pdf.Table([[logo,[address,address2]]],style=LIST_STYLE )\n\ttablelogo._argW[0]=40\n\tdoc.add(tablelogo)\n\t\n    # give me some space\n\tdoc.add_spacer()\n    \n    # this header defaults to H1\n\trx = db(db.mv_caja.id==mov_id).select().first()\t\n\ttitulo = pdf.Paragraph("<para align=center> <b>Movimientos de Caja al %s </b></para>" % rx.fecha,MyTheme.paragraph)\t\n\ttableheader=pdf.Table([[titulo]],style=HEAD_STYLE )\n\tdoc.add(tableheader)\n\t#doc.add_header( "al: %s" % rx.fecha)\n\n    # here\'s how to add a paragraph\n\t#doc.add_paragraph("We are pleased to confirm your reservation with ...")\n\tdoc.add_spacer()\t\n\n\t# let\'s move on to the divers table\n\n\tdiver_table = [[\'Fecha\', \'Concepto\', \'Entradas\',\'Salidas\',\'Usuario\']] # this is the header row \n\tentradas=0.00\n\tsalidas=0.00\n\ttotal=0.00\n\tfor row in db(db.mv_caja_det.mv_caja_id==mov_id).select() :   \n\t\tdiver_table.append([row.fecha, row.concepto, row.entrada, row.salida,row.usuario_id]) # these are the other rows\n\t\tentradas+=row.entrada\n\t\tsalidas+=row.salida\n\ttotal=entradas-salidas\n\tdiver_table.append(["", "","",""])\n\tdiver_table.append([\'Totales\', "",entradas, salidas])\n\tdiver_table.append([\'General\', "",total,""])\n\n\t\n\tdoc.add_table(diver_table, TABLE_WIDTH)\n\t\n\tresponse.headers[\'Content-Type\']=\'application/pdf\'\n\t\n\treturn doc.render()\nresponse._vars=response._caller(index)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/wasuaje/Documentos/desarrollo/web2py6/gluon/restricted.py", line 220, in restricted\n    exec ccode in environment\n  File "/home/wasuaje/Documentos/desarrollo/web2py6/applications/pysalon/controllers/mov_caja.py", line 232, in <module>\n  File "/home/wasuaje/Documentos/desarrollo/web2py6/gluon/globals.py", line 385, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/wasuaje/Documentos/desarrollo/web2py6/gluon/tools.py", line 3287, in f\n    return action(*a, **b)\n  File "/home/wasuaje/Documentos/desarrollo/web2py6/applications/pysalon/controllers/mov_caja.py", line 30, in index\n    print db.lastsql_\n  File "/home/wasuaje/Documentos/desarrollo/web2py6/gluon/dal.py", line 8329, in __getattr__\n    return ogetattr(self, key)\nAttributeError: \'DAL\' object has no attribute \'lastsql_\'\n'
p11
s.