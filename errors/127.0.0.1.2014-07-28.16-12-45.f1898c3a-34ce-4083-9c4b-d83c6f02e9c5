(dp1
S'output'
p2
S"<type 'exceptions.ValueError'> unconverted data remains: 8"
p3
sS'layer'
p4
S'/home/wasuaje/Documentos/desarrollo/web2py6/applications/pysalon/controllers/control_caja.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n### required - do no delete\nimport json\nimport math \nimport datetime\n\ndef user(): return dict(form=auth())\ndef download(): return response.download(request,db)\ndef call(): return service()\n### end requires\n@auth.requires_login()\ndef index():\t\n\t\n\t#print response.cookies[\'caja_id\']\n\tif request.cookies.has_key(\'caja_id\'):\n\t\tmsg="ya hay una caja abierta!"\t\t\n\t\twrt=False\t\t\t\n\t\tform=FORM()\n\telse:\n\t\tmsg="no hay una caja abierta"\n\t\texito=2\n\t\twrt=True\n\t\t#master form para apertura cierre\t\n\t\tform = SQLFORM.factory(\t\t\t\t\t\t\t\n        \tField(\'Fecha_Caja\', type=\'date\',requires=IS_NOT_EMPTY(),writable=wrt),\n        \tField(\'Monto_Apertura\', type=\'float\',default=\'0.00\',writable=wrt),        \t\t\t\t\t\n        \tformstyle=\'bootstrap\')\n\t\n\tif request.vars.exito!=None:\n\t\texito=int(request.vars.exito)\n\telse:\n\t\texito=2\n\t\n\tif form.process(onvalidation=apertura_validate).accepted:\t\t\t\n\t\t#aunque exito viene del redirect del onvalidate\n\t\texito=1\t\t\t\t\t\n\telif form.errors:\n\t\texito=0\n\t\n\t#si la respuesta que viene desde validate es exito o no\n\t#no me traigo el mensaje de error desde validate porque\n\t#sal en la barra de url como paremetro se ve feo\n\tif exito==1:\n\t\tmsg="Caja abierta exitosamente"\n\telif exito==0:\n\t\tmsg="Error la caja ya esta abierta"\t\n\n\treturn dict(exito=exito,form=form,msg=msg)\n\ndef apertura_validate(form):\n\ttabla=\'mv_caja\'\n\ttabla2=\'mv_caja_det\'\n\t#primero valido que no exista la caja\n\tdt_str = form.vars.Fecha_Caja\n\tprint dt_str\n\tdt_obj = datetime.datetime.strptime(dt_str, \'%Y-%d-%m\')\n\trw=db( db[tabla].fecha == dt_obj ).select().first()\n\t\n\tif rw:\n\t\tredirect(URL(\'control_caja\',\'index\',vars=dict(exito=0)))\n\telse:\n\t\t#despues que se inserte todo ok\n\t\trecord=db[tabla].insert(fecha=dt_obj,\n\t\t\t\t\t\t\t\t\tapertura=datetime.datetime.now(),\n\t\t\t\t\t\t\t\t\tmonto_apertura=form.vars.Monto_Apertura,\n\t\t\t\t\t\t\t\t\tdescripcion=\'Movimiento inicial de Apertura de caja\',\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tusuario_id=session.auth.user.id)\n\t\tif record>0:\n\t\t\trecord2=db[tabla2].insert(fecha=datetime.datetime.now(),\n\t\t\t\t\t\t\t\t\tconcepto=\'Movimiento de Apertura de caja\',\n\t\t\t\t\t\t\t\t\tentrada=form.vars.Monto_Apertura,\n\t\t\t\t\t\t\t\t\tmv_caja_id=record,\n\t\t\t\t\t\t\t\t\tusuario_id=session.auth.user.id\n\t\t\t\t\t\t\t\t\t)\n\t\t\tif record2:\t\t\t\t\t\t\t\n\t\t\t\tresponse.cookies[\'caja_id\'] = record\n\t\t\t\tresponse.cookies[\'caja_id\'][\'expires\'] = 24 * 3600\n\t\t\t\tresponse.cookies[\'caja_id\'][\'path\'] = \'/\'\t\t\t\t\n\t\t\t\tredirect(URL(\'control_caja\',\'index\',vars=dict(exito=1)))\t\t\t\t\t\t\t\t\n\t\t\telse:\t\t\t\n\t\t\t\tredirect(URL(\'control_caja\',\'index\',vars=dict(exito=0)))\n\n#esta funcion se llama desde ajax en control_caja.html\ndef get_monto_apertura():\n\t#caja_fecha=request.args[0]\n\t#dt_str = caja_fecha\n\t#dt_obj = datetime.datetime.strptime(dt_str, \'%d/%m/%Y\')\n\ttabla=\'mv_caja\'\n\ttabla2=\'mv_caja_det\'\n\t#\n\t#traigo el monto de cierre de la ultima caja cerrada para ese caja id\n\t#\n\trw=db( (db[tabla].cierre != None) ).select(orderby=~db[tabla].fecha).first()\n\tif rw:\n\t\t#print rw.fecha,rw.monto_apertura,rw.monto_cierre\n\t\tvalor=rw.monto_apertura\n\telse:\n\t\tvalor=0.00\n\t#print db._lastsql\n\treturn valor\n\n\ndef cierre():\n\t\n\tmsg=""\n\tif request.vars.exito!=None:\n\t\texito=int(request.vars.exito)\n\telse:\n\t\texito=2\t\n\n\tform = SQLFORM.factory(\t\t\t\n    \t\tField(\'Fecha_Caja\', type=\'date\',requires=IS_NOT_EMPTY()),        \t\t\t\t\t\n    \t\tformstyle=\'bootstrap\')\n\t\n\tif form.process(onvalidation=cierre_prevalidate).accepted:\t\t\t\n\t\t#aunque exito viene del redirect del onvalidate\n\t\texito=1\t\t\t\t\t\n\telif form.errors:\n\t\texito=0\n\t#con esta busco los detalles\n\tif exito==0:\t\t\n\t\tmsg="Error la caja para esa fecha no existe"\t\t\n\n\treturn dict(exito=exito,form=form,msg=msg)\t\n\ndef cierre_prevalidate(form):\n\ttabla=\'mv_caja\'\n\ttabla2=\'mv_caja_det\'\n\t#primero valido que no exista la caja\n\tdt_str = form.vars.Fecha_Caja\n\tdt_obj = datetime.datetime.strptime(dt_str, \'%d/%m/%Y\')\n\trw=db( (db[tabla].fecha == dt_obj) & (db[tabla].cierre == None ) ).select().first()\n\t#print db._lastsql\n\tif rw:\n\t\tredirect(URL(\'control_caja\',\'cierre_fin\',vars=dict(mov_id=rw.id)))\n\telse:\n\t\tredirect(URL(\'control_caja\',\'cierre\',vars=dict(exito=0)))\n\ndef cierre_fin():\n\ttabla=\'mv_caja\'\n\ttabla2=\'mv_caja_det\'\t\n\tmsg=""\n\turl=""\n\tif request.vars.exito!=None:\n\t\texito=int(request.vars.exito)\n\telse:\n\t\texito=2\t\n\n\t#print request.vars.mov_id,type(request.vars.mov_id)\n\tmov_id=request.vars.mov_id\n\t\n\t#print rw\n\t#ahora tengo que busca las entradas y salidas de este mov_id en mv_caja_detalle\n\trw=db( db[tabla2].mv_caja_id == mov_id ).select()\n\tentradas=0.00\n\tsalidas=0.00\n\tfor rec in rw:\n\t\tentradas+=rec.entrada\n\t\tsalidas+=rec.salida\n\n\trw=db( db[tabla].id == mov_id ).select().first()\n\tif rw:\n\t\tform = SQLFORM.factory(\t\t\t\n        \tField(\'Fecha_Caja\', type=\'date\',requires=IS_NOT_EMPTY(), default=rw.fecha ),\n        \tField(\'Monto_Apertura\', type=\'float\',default=rw.monto_apertura, writable=False),\n        \tField(\'Entradas\', type=\'float\',default=entradas, writable=False),\n        \tField(\'Salidas\', type=\'float\',default=salidas, writable=False),\n        \tField(\'Monto_Retiro\', type=\'float\',default=0.00),\n        \tField(\'Monto_Cierre\', type=\'float\',default=entradas-salidas, writable=False),\n        \thidden=dict(mv_id=mov_id,monto_cierre=entradas-salidas,entradas=entradas,salidas=salidas),      \t\n        \tformstyle=\'bootstrap\')\t\t\n\t\tif form.process(onvalidation=cierre_finvalidate).accepted:\t\t\t\n\t\t#aunque exito viene del redirect del onvalidate\n\t\t\texito=1\t\t\t\t\t\n\t\telif form.errors:\n\t\t\texito=0\n\n\tif exito==0:\t\t\n\t\tmsg="Ha ocurido un error, la caja ya esta cerrada!"\n\telif exito==1:\n\t\tmsg="Caja cerrada exitosamente"\n\t\t#olvido las variables de sesion de caja\n\t\tresponse.cookies[\'caja_id\'] = None\n\t\tresponse.cookies[\'caja_id\'][\'expires\'] = -10000\n\t\tresponse.cookies[\'caja_id\'][\'path\'] = \'/\'\t\t\t\n\t\t\n\turl=URL(\'mov_caja\',\'imprimir\',vars=dict(mv_id=mov_id))\n\n\t#con esta busco los detalles\n\treturn dict(exito=exito,form=form,msg=msg,url=url)\t\n\ndef cierre_finvalidate(form):\t\n\t#Recibo los datos\t\n\tmov_id=request.vars.mv_id\n\tmonto_cierre=request.vars.monto_cierre\n\tmonto_retiro=request.vars.Monto_Retiro\n\tdescripcion="Caja Cerrada."\n\ttabla=\'mv_caja\'\n\ttabla2=\'mv_caja_det\'\t\n\tmsg=""\n\t#valido que la caja no haya sido ya cerrada y evitar duplicidad de registros\n\t#entonces selecciono la caja id respectiva y que este abierta, si esta cerrada\n\t# ya no puedo proseguir\n\trw=db( (db[tabla].id == mov_id) & (db[tabla].cierre == None ) ).select().first()\n\tif rw:\n\t\t#actualizo el registro mov_id con monto cierre, fecha_cierre=now, descripcion\n\t\trow= db(db[tabla].id == mov_id).update(descripcion=descripcion, monto_cierre=monto_cierre,cierre=datetime.datetime.now())\n\t\t\n\t\t#inserto movimiento de salida por el monto del retiro\n\t\tif row > 0:\n\t\t\trecord2=db[tabla2].insert(fecha=datetime.datetime.now(),\n\t\t\t\t\t\t\t\t\tconcepto=\'Movimiento de Cierre de caja (retiro para deposito)\',\n\t\t\t\t\t\t\t\t\tsalida=monto_retiro,\n\t\t\t\t\t\t\t\t\tmv_caja_id=mov_id,\n\t\t\t\t\t\t\t\t\tusuario_id=session.auth.user.id\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t#si todo esta ok redirijo a movimientos de caja con este mv_id\n\t\t\tif record2>0:\n\t\t\t\tredirect(URL(\'control_caja\',\'cierre_fin\',vars=dict(exito=1,mov_id=mov_id)))\n\t\t\telse:\t\t\t\t\n\t\t\t\tredirect(URL(\'control_caja\',\'cierre_fin\',vars=dict(exito=0,mov_id=mov_id)))\n\telse:\n\t\tredirect(URL(\'control_caja\',\'cierre_fin\',vars=dict(exito=0,mov_id=mov_id)))\t\n\t#sino vuelvo a cierre_fin con mensage de error\n\n\ndef error():\n    return dict()\n\ndef imprimir():\n# Let\'s import the wrapper\n\timport os\n\timport pdf\n\tfrom pdf.theme import colors, DefaultTheme\n\n\t# and define a constant\n\tTABLE_WIDTH = 540 # this you cannot do in rLab which is why I wrote the helper initially\n\n    # then let\'s extend the Default theme. I need more space so I redefine the margins\n    # also I don\'t want tables, etc to break across pages (allowSplitting = False)\n    # see http://www.reportlab.com/docs/reportlab-userguide.pdf\n\tclass MyTheme(DefaultTheme):\n\t\tdoc = {\n            \'leftMargin\': 25,\n            \'rightMargin\': 25,\n            \'topMargin\': 20,\n            \'bottomMargin\': 25,\n            \'allowSplitting\': False\n            }\n            \n    # let\'s create the doc and specify title and author\n\tdoc = pdf.Pdf(\'Listado de Cajas\', \'wuelfhis asuaje\')\n\n    # now we apply our theme\n\tdoc.set_theme(MyTheme)\n\n    # time to add the logo at the top right\n\t#logo_path = os.path.join(request.folder,\'static/images\',\'facebook.png\')   \n\t#doc.add_image(logo_path, 67, 67, pdf.LEFT)\n\tlogo=pdf.Image(os.path.join(request.folder,\'static/images\',\'facebook.png\')   )\n\taddress = pdf.Paragraph("<para align=left> We are please%s </para>" % "Hola",MyTheme.paragraph)\n\tLIST_STYLE = [(\n\t\t\t\'LINEABOVE\', (0,0), (-1,0), 2, colors.grey),\n\t\t\t(\'LINEABOVE\', (0,1), (-1,-1), 0.25, colors.black),\n\t\t\t(\'LINEBELOW\', (0,0), (-1,-1), 2, colors.grey),\n\t\t\t(\'ALIGN\', (0,0), (0,0),\'LEFT\'),\t\t\t\n\t\t\t\n\t\t\t]\n\t\t\t\n\t\n\tdoc.add(pdf.Table([[logo,address,"","","",""]],style=LIST_STYLE ))\n\n    # give me some space\n\tdoc.add_spacer()\n    \n    # this header defaults to H1\n\tdoc.add_header(\'Listado de cajas\')\n\n    # here\'s how to add a paragraph\n\t#doc.add_paragraph("We are pleased to confirm your reservation with ...")\n\tdoc.add_spacer()\t\n\n\t# let\'s move on to the divers table\n\n\tdiver_table = [[\'Id\', \'Codigo\', \'Nombre\']] # this is the header row \n\n\tfor row in db(db.cf_caja.id>0).select() :   \n\t\tdiver_table.append([row.id, row.codigo, row.nombre]) # these are the other rows\n\n\tdoc.add_table(diver_table, TABLE_WIDTH)\n\t\n\tresponse.headers[\'Content-Type\']=\'application/pdf\'\n\t\n\treturn doc.render()\nresponse._vars=response._caller(index)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/wasuaje/Documentos/desarrollo/web2py6/gluon/restricted.py", line 220, in restricted\n    exec ccode in environment\n  File "/home/wasuaje/Documentos/desarrollo/web2py6/applications/pysalon/controllers/control_caja.py", line 295, in <module>\n  File "/home/wasuaje/Documentos/desarrollo/web2py6/gluon/globals.py", line 385, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/wasuaje/Documentos/desarrollo/web2py6/gluon/tools.py", line 3287, in f\n    return action(*a, **b)\n  File "/home/wasuaje/Documentos/desarrollo/web2py6/applications/pysalon/controllers/control_caja.py", line 34, in index\n    if form.process(onvalidation=apertura_validate).accepted:\n  File "/home/wasuaje/Documentos/desarrollo/web2py6/gluon/html.py", line 2282, in process\n    self.validate(**kwargs)\n  File "/home/wasuaje/Documentos/desarrollo/web2py6/gluon/html.py", line 2219, in validate\n    if self.accepts(**kwargs):\n  File "/home/wasuaje/Documentos/desarrollo/web2py6/gluon/sqlhtml.py", line 1381, in accepts\n    **kwargs\n  File "/home/wasuaje/Documentos/desarrollo/web2py6/gluon/html.py", line 2120, in accepts\n    call_as_list(onvalidation, self)\n  File "/home/wasuaje/Documentos/desarrollo/web2py6/gluon/html.py", line 140, in call_as_list\n    item(*a,**b)\n  File "/home/wasuaje/Documentos/desarrollo/web2py6/applications/pysalon/controllers/control_caja.py", line 56, in apertura_validate\n    dt_obj = datetime.datetime.strptime(dt_str, \'%Y-%d-%m\')\n  File "/usr/lib/python2.7/_strptime.py", line 328, in _strptime\n    data_string[found.end():])\nValueError: unconverted data remains: 8\n'
p11
s.